cor2par <- function(R){
X <- solve(R)
d <- sqrt(diag(X))
P <- -X / (d %*% t(d))
diag(P) <- 1
return(P)
}
select.ij <- function(P,amat){
p <- nrow(P); minabsP <- Inf
for(i in (2:p)){
for(j in (1:(i-1))){
if(amat[i,j]==1 && abs(P[i,j]) < minabsP){
minabsP <- abs(P[i,j]);
i0 <- i;
j0 <- j;
}
}
}
return(c(i0,j0))
}
# 準備
setwd("C:/Users/thistle/projects/enshu-git/keisu_jikken/stats")
options(digits=3)
library("ggm")
data <- marks;#read.table("stats.csv", sep=",", header=T, as.is=T)
X <- data #[3:48,2:9]
R <- cor(X);
n <- nrow(X); p <- ncol(X);
amat <- matrix(1,p,p)-diag(p);
dimnames(amat) <- dimnames(R)
# ループ処理
repeat{
R <- cor(X);
f <- fitConGraph(amat,R,n);
aic <- f$dev - 2*f$df;
M <- f$Shat;
P <- cor2par(M);
# 更新処理
pivot=select.ij(P, amat);
new_amat[pivot[1],pivot[2]] <- amat[pivot[2],pivot[1]] <- 0;
new_f <- fitConGraph(new_amat,R,n);
new_aic <- new_f$dev - 2*new_f$df;
# もしも値が増えていたら終了
if(new_aic>=aic){
print(P)
drawGraph(amat,adjust=TRUE)
break
}
amat <- new_amat
}
cor2par <- function(R){
X <- solve(R)
d <- sqrt(diag(X))
P <- -X / (d %*% t(d))
diag(P) <- 1
return(P)
}
select.ij <- function(P,amat){
p <- nrow(P); minabsP <- Inf
for(i in (2:p)){
for(j in (1:(i-1))){
if(amat[i,j]==1 && abs(P[i,j]) < minabsP){
minabsP <- abs(P[i,j]);
i0 <- i;
j0 <- j;
}
}
}
return(c(i0,j0))
}
# 準備
setwd("C:/Users/thistle/projects/enshu-git/keisu_jikken/stats")
options(digits=3)
library("ggm")
data <- marks;#read.table("stats.csv", sep=",", header=T, as.is=T)
X <- data #[3:48,2:9]
R <- cor(X);
n <- nrow(X); p <- ncol(X);
amat <- matrix(1,p,p)-diag(p);
dimnames(amat) <- dimnames(R)
# ループ処理
repeat{
R <- cor(X);
f <- fitConGraph(amat,R,n);
aic <- f$dev - 2*f$df;
M <- f$Shat;
P <- cor2par(M);
# 更新処理
pivot=select.ij(P, amat);
new_amat <- amat
new_amat[pivot[1],pivot[2]] <- new_amat[pivot[2],pivot[1]] <- 0;
new_f <- fitConGraph(new_amat,R,n);
new_aic <- new_f$dev - 2*new_f$df;
# もしも値が増えていたら終了
if(new_aic>=aic){
print(P)
drawGraph(amat,adjust=TRUE)
break
}
amat <- new_amat
}
cor2par <- function(R){
X <- solve(R)
d <- sqrt(diag(X))
P <- -X / (d %*% t(d))
diag(P) <- 1
return(P)
}
select.ij <- function(P,amat){
p <- nrow(P); minabsP <- Inf
for(i in (2:p)){
for(j in (1:(i-1))){
if(amat[i,j]==1 && abs(P[i,j]) < minabsP){
minabsP <- abs(P[i,j]);
i0 <- i;
j0 <- j;
}
}
}
return(c(i0,j0))
}
# 準備
setwd("C:/Users/thistle/projects/enshu-git/keisu_jikken/stats")
options(digits=3)
library("ggm")
data <- read.table("stats.csv", sep=",", header=T, as.is=T)
X <- data[3:48,2:9]
R <- cor(X);
n <- nrow(X); p <- ncol(X);
amat <- matrix(1,p,p)-diag(p);
dimnames(amat) <- dimnames(R)
# ループ処理
repeat{
R <- cor(X);
f <- fitConGraph(amat,R,n);
aic <- f$dev - 2*f$df;
M <- f$Shat;
P <- cor2par(M);
# 更新処理
pivot=select.ij(P, amat);
new_amat <- amat
new_amat[pivot[1],pivot[2]] <- new_amat[pivot[2],pivot[1]] <- 0;
new_f <- fitConGraph(new_amat,R,n);
new_aic <- new_f$dev - 2*new_f$df;
# もしも値が増えていたら終了
if(new_aic>=aic){
print(P)
drawGraph(amat,adjust=TRUE)
break
}
amat <- new_amat
}
